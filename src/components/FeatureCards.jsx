import React, { useEffect, useRef, useState } from 'react';
import { FaUsers, FaHandshake, FaBoxes, FaShieldAlt, FaBalanceScale, FaLock, FaChartLine, FaSatelliteDish } from 'react-icons/fa';
import { useLanguage } from '../contexts/LanguageContext';

const FeatureCards = () => {
  const { language } = useLanguage();
  const isBn = language === 'bn' || language === 'bangla' || language === 'bd';

  // Unified icon color tone (allow subtle hue shifts but within primary/amber accent scale)
  const features = [
    { icon: <FaBalanceScale className="w-8 h-8 text-primary-600" />, key: 'fairPrice', titleBn: '‡¶∏‡ßç‡¶¨‡¶ö‡ßç‡¶õ ‡¶®‡ßç‡¶Ø‡¶æ‡¶Ø‡ßç‡¶Ø ‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≤‡¶ó‡¶∞‡¶ø‡¶¶‡¶Æ', titleEn: 'Transparent Fair Price Engine', descBn: '‡¶ú‡¶æ‡¶§‡ßÄ‡¶Ø‡¶º ‡¶¨‡¶æ‡¶ú‡¶æ‡¶∞, ‡¶™‡¶æ‡¶á‡¶ï‡¶æ‡¶∞‡¶ø ‡¶π‡¶æ‡¶ü ‡¶ì ‡¶Ü‡¶¨‡¶π‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶°‡ßá‡¶ü‡¶æ ‡¶è‡¶ï‡¶§‡ßç‡¶∞‡ßá ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£ ‡¶ï‡¶∞‡ßá ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≤‡¶ó‡¶∞‡¶ø‡¶¶‡¶Æ ‡¶ï‡ßÉ‡¶∑‡¶ï‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶™‡ßç‡¶∞‡¶∏‡ßç‡¶§‡¶æ‡¶¨‡¶ø‡¶§ ‡¶®‡ßç‡¶Ø‡¶æ‡¶Ø‡ßç‡¶Ø ‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø ‡¶¶‡ßá‡¶ñ‡¶æ‡¶Ø‡¶º‚Äî‡¶∏‡¶ø‡¶®‡ßç‡¶°‡¶ø‡¶ï‡ßá‡¶ü‡ßá‡¶∞ ‡¶§‡ßà‡¶∞‡¶ø‡¶ï‡ßÉ‡¶§ ‡¶ï‡ßÉ‡¶§‡ßç‡¶∞‡¶ø‡¶Æ ‡¶ò‡¶æ‡¶ü‡¶§‡¶ø ‡¶≠‡¶æ‡¶ô‡ßá‡•§', descEn: 'Algorithm blends national wholesale, local bazaar and weather data to recommend fair prices, neutralising artificial scarcity crafted by syndicates.', emoji: '‚öñÔ∏è' },
    { icon: <FaUsers className="w-8 h-8 text-primary-500" />, key: 'collective', titleBn: '‡¶∏‡¶Æ‡¶¨‡¶æ‡¶Ø‡¶º ‡¶∂‡¶ï‡ßç‡¶§‡¶ø ‡¶ì ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶¨‡¶æ‡¶∞‡¶ó‡ßá‡¶á‡¶®‡¶ø‡¶Ç', titleEn: 'Collective Power & Group Bargaining', descBn: '‡¶è‡¶ï‡¶æ‡¶ß‡¶ø‡¶ï ‡¶ï‡ßÉ‡¶∑‡¶ï‡ßá‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ö ‡¶≤‡¶ü‡¶ø‡¶Ç ‡¶ì ‡¶∏‡¶Æ‡¶¨‡¶æ‡¶Ø‡¶º ‡¶¶‡¶∞ ‡¶ï‡¶∑‡¶æ‡¶ï‡¶∑‡¶ø‚Äî‡¶è‡¶ï‡¶ï ‡¶ï‡ßÉ‡¶∑‡¶ï‡ßá‡¶∞ ‡¶¶‡ßÅ‡¶∞‡ßç‡¶¨‡¶≤‡¶§‡¶æ ‡¶ï‡¶Æ‡¶æ‡¶Ø‡¶º ‡¶ì ‡¶∏‡¶ø‡¶®‡ßç‡¶°‡¶ø‡¶ï‡ßá‡¶ü‡ßá‡¶∞ ‡¶ö‡¶æ‡¶™‡ßá ‡¶¶‡¶æ‡¶Å‡¶°‡¶º ‡¶ï‡¶∞‡¶æ‡¶Ø‡¶º ‡¶∂‡¶ï‡ßç‡¶§ ‡¶¶‡ßá‡¶Ø‡¶º‡¶æ‡¶≤‡•§', descEn: 'Batch lotting lets smallholders negotiate as one, shrinking fragmentation and forming a wall against cartel pressure.', emoji: 'ü§ù' },
    { icon: <FaChartLine className="w-8 h-8 text-primary-600" />, key: 'realtime', titleBn: '‡¶∞‡¶ø‡¶Ø‡¶º‡ßá‡¶≤-‡¶ü‡¶æ‡¶á‡¶Æ ‡¶¨‡¶æ‡¶ú‡¶æ‡¶∞ ‡¶∏‡¶ø‡¶ó‡¶®‡ßç‡¶Ø‡¶æ‡¶≤', titleEn: 'Real‚ÄëTime Market Signals', descBn: '‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤-‡¶´‡¶æ‡¶∞‡ßç‡¶∏‡ßç‡¶ü ‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶°‡ßá ‡¶≤‡¶æ‡¶á‡¶≠ ‡¶∏‡¶∞‡¶¨‡¶∞‡¶æ‡¶π, ‡¶ö‡¶æ‡¶π‡¶ø‡¶¶‡¶æ, ‡¶ü‡ßç‡¶∞‡ßá‡¶®‡ßç‡¶° ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≤‡¶æ‡¶∞‡ßç‡¶ü‚Äî‡¶π‡¶†‡¶æ‡ßé ‡¶Ö‡¶∏‡ßç‡¶¨‡¶æ‡¶≠‡¶æ‡¶¨‡¶ø‡¶ï ‡¶∏‡ßç‡¶ü‡¶ï ‡¶π‡ßã‡¶≤‡ßç‡¶° ‡¶¨‡¶æ ‡¶¶‡¶æ‡¶Æ ‡¶≤‡¶æ‡¶´‡¶æ‡¶≤‡¶æ‡¶´‡¶ø ‡¶∏‡¶æ‡¶•‡ßá ‡¶∏‡¶æ‡¶•‡ßá ‡¶ö‡¶ø‡¶π‡ßç‡¶®‡¶ø‡¶§‡•§', descEn: 'Mobile-first dashboards stream live supply, demand & anomaly alerts‚Äîflagging sudden stock hoards or suspicious price spikes instantly.', emoji: 'üì°' },
    { icon: <FaShieldAlt className="w-8 h-8 text-primary-700" />, key: 'fraud', titleBn: '‡¶è‡¶Ü‡¶á ‡¶∏‡¶ø‡¶®‡ßç‡¶°‡¶ø‡¶ï‡ßá‡¶ü ‡¶Ö‡¶∏‡ßç‡¶¨‡¶æ‡¶≠‡¶æ‡¶¨‡¶ø‡¶ï‡¶§‡¶æ ‡¶∂‡¶®‡¶æ‡¶ï‡ßç‡¶§‡¶ï‡¶∞‡¶£', titleEn: 'AI Syndicate Anomaly Detection', descBn: '‡¶≤‡ßá‡¶®‡¶¶‡ßá‡¶® ‡¶™‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∞‡ßç‡¶®, ‡¶Ö‡¶û‡ßç‡¶ö‡¶≤‡¶≠‡¶ø‡¶§‡ßç‡¶§‡¶ø‡¶ï ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶¨‡¶ø‡¶≤‡¶Æ‡ßç‡¶¨ ‡¶ì ‡¶Ö‡¶∏‡ßç‡¶¨‡¶æ‡¶≠‡¶æ‡¶¨‡¶ø‡¶ï ‡¶∏‡ßç‡¶ü‡¶ï ‡¶Æ‡ßÅ‡¶≠‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶∏‡ßç‡¶ï‡ßã‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶∏‡¶ø‡¶®‡ßç‡¶°‡¶ø‡¶ï‡ßá‡¶ü ‡¶∏‡¶Æ‡ßç‡¶≠‡¶æ‡¶¨‡¶®‡¶æ ‡¶∞‡¶ø‡¶Ø‡¶º‡ßá‡¶≤-‡¶ü‡¶æ‡¶á‡¶Æ‡ßá ‡¶´‡ßç‡¶≤‡ßç‡¶Ø‡¶æ‡¶ó ‡¶ï‡¶∞‡ßá‡•§', descEn: 'Models score transaction clusters, regional delays & unusual stock moves to flag probable collusion in real time.', emoji: 'üõ°Ô∏è' },
    { icon: <FaLock className="w-8 h-8 text-primary-600" />, key: 'trace', titleBn: '‡¶ü‡ßç‡¶∞‡ßá‡¶∏‡ßá‡¶¨‡¶≤ ‡¶ì ‡¶∏‡ßÅ‡¶∞‡¶ï‡ßç‡¶∑‡¶ø‡¶§ ‡¶≤‡ßá‡¶®‡¶¶‡ßá‡¶®', titleEn: 'Traceable & Secure Transactions', descBn: '‡¶á‡¶®‡¶≠‡¶Ø‡¶º‡ßá‡¶∏ ‡¶π‡ßç‡¶Ø‡¶æ‡¶∂, ‡¶ü‡¶æ‡¶á‡¶Æ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶Æ‡ßç‡¶™‡¶° ‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø ‡¶≤‡¶ó ‡¶ì ‡¶Ö‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶®‡ßÄ‡¶Ø‡¶º ‡¶∞‡ßá‡¶ï‡¶∞‡ßç‡¶°‚Äî‡¶ó‡ßã‡¶™‡¶® ‡¶¶‡¶∞-‡¶ï‡¶∑‡¶æ‡¶ï‡¶∑‡¶ø ‡¶ì ‡¶ï‡¶æ‡¶≤‡ßã ‡¶ö‡ßá‡¶á‡¶® ‡¶≠‡¶æ‡¶ô‡¶æ‡¶∞ ‡¶°‡ßá‡¶ü‡¶æ ‡¶≠‡¶ø‡¶§‡ßç‡¶§‡¶ø‡•§', descEn: 'Invoice hashing and tamper‚Äëevident delivery trails create accountability layers that erode secret side deals.', emoji: 'üîê' },
    { icon: <FaBoxes className="w-8 h-8 text-primary-500" />, key: 'logistics', titleBn: '‡¶∏‡ßç‡¶Æ‡¶æ‡¶∞‡ßç‡¶ü ‡¶≤‡¶ú‡¶ø‡¶∏‡ßç‡¶ü‡¶ø‡¶ï‡ßç‡¶∏ ‡¶ì ‡¶≤‡¶æ‡¶∏‡ßç‡¶ü ‡¶Æ‡¶æ‡¶á‡¶≤', titleEn: 'Smart Logistics & Last‚ÄëMile', descBn: '‡¶∞‡ßÅ‡¶ü ‡¶Ö‡¶™‡ßç‡¶ü‡¶ø‡¶Æ‡¶æ‡¶á‡¶ú‡ßá‡¶∂‡¶® + ‡¶∂‡ßá‡¶Ø‡¶º‡¶æ‡¶∞‡ßç‡¶° ‡¶ï‡ßã‡¶≤‡ßç‡¶°‡¶ö‡ßá‡¶á‡¶® ‡¶ï‡ßç‡¶∑‡¶§‡¶ø‡¶∞ ‡¶π‡¶æ‡¶∞ ‡¶ï‡¶Æ‡¶æ‡¶Ø‡¶º, ‡¶ï‡ßÉ‡¶∑‡¶ï‡¶ï‡ßá ‡¶¶‡ßç‡¶∞‡ßÅ‡¶§ ‡¶®‡¶ó‡¶¶‡ßá ‡¶™‡ßå‡¶Å‡¶õ‡ßá ‡¶¶‡ßá‡¶Ø‡¶º‚Äî‡¶¨‡¶æ‡¶ß‡ßç‡¶Ø‡¶§‡¶æ‡¶Æ‡ßÇ‡¶≤‡¶ï ‡¶°‡¶ø‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡ßá‡¶∏ ‡¶∏‡ßá‡¶≤ ‡¶ï‡¶Æ‡ßá‡•§', descEn: 'Route optimisation & shared cold chain cut spoilage, accelerating cash cycles and reducing distress selling leverage.', emoji: 'üöö' },
    { icon: <FaHandshake className="w-8 h-8 text-primary-600" />, key: 'direct', titleBn: '‡¶∏‡¶∞‡¶æ‡¶∏‡¶∞‡¶ø ‡¶ï‡ßç‡¶∞‡ßá‡¶§‡¶æ ‡¶∏‡¶Ç‡¶Ø‡ßã‡¶ó', titleEn: 'Direct Buyer Connectivity', descBn: '‡¶™‡ßç‡¶∞‡¶∏‡ßá‡¶∏‡¶∞, ‡¶∞‡¶ø‡¶ü‡ßá‡¶á‡¶≤‡¶æ‡¶∞ ‡¶ì ‡¶∞‡¶™‡ßç‡¶§‡¶æ‡¶®‡¶ø‡¶ï‡¶æ‡¶∞‡¶ï‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶Æ‡¶ß‡ßç‡¶Ø‡¶∏‡ßç‡¶¨‡¶§‡ßç‡¶¨‡¶≠‡ßã‡¶ó‡ßÄ ‡¶õ‡¶æ‡¶°‡¶º‡¶æ ‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ö‡¶ø‡¶Ç‚Äî‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø‡ßá‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡¶¨‡¶∞‡ßç‡¶§‡ßÄ ‡¶∏‡ßç‡¶§‡¶∞ ‡¶≠‡ßá‡¶ô‡ßá ‡¶Ø‡¶æ‡¶Ø‡¶º‡•§', descEn: 'Direct matchmaking to processors, retailers & exporters removes layers that syndicates exploit for margin stacking.', emoji: 'üîó' },
    { icon: <FaSatelliteDish className="w-8 h-8 text-primary-500" />, key: 'intel', titleBn: '‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ‡ßÄ‡¶£ ‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø ‡¶¨‡ßÅ‡¶¶‡ßç‡¶ß‡¶ø‡¶Æ‡¶§‡ßç‡¶§‡¶æ ‡¶®‡ßá‡¶ü‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞‡ßç‡¶ï', titleEn: 'Rural Price Intelligence Network', descBn: '‡¶è‡¶∏‡¶è‡¶Æ‡¶è‡¶∏ ‡¶ì ‡¶≠‡¶Ø‡¶º‡ßá‡¶∏ ‡¶¨‡¶ü ‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ ‡¶™‡¶∞‡ßç‡¶Ø‡¶æ‡¶Ø‡¶º‡ßá‡¶∞ ‡¶¶‡¶æ‡¶Æ‡ßá‡¶∞ ‡¶¶‡ßç‡¶∞‡ßÅ‡¶§ ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶∏‡¶Ç‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá‚Äî‡¶ï‡ßã‡¶®‡ßã ‡¶è‡¶≤‡¶æ‡¶ï‡¶æ‡¶∞ ‡¶ï‡ßÉ‡¶§‡ßç‡¶∞‡¶ø‡¶Æ ‡¶¶‡¶æ‡¶Æ ‡¶ö‡¶æ‡¶™ ‡¶¶‡ßç‡¶∞‡ßÅ‡¶§ ‡¶ß‡¶∞‡¶æ ‡¶™‡¶°‡¶º‡ßá‡•§', descEn: 'SMS & voice bots crowdsource rural price points so artificial local suppression is surfaced fast.', emoji: 'üìä' }
  ];

  // NEW: Split into two groups of 4
  const groupA = features.slice(0, 4);
  const groupB = features.slice(4, 8);
  const [stage, setStage] = useState(0); // 0 = first group, 1 = second group
  const sectionRef = useRef(null);

  useEffect(() => {
    const handleScroll = () => {
      if (!sectionRef.current) return;
      const rect = sectionRef.current.getBoundingClientRect();
      const vh = window.innerHeight || 0;
      const sectionCenter = rect.top + rect.height / 2;
      const viewportCenter = vh / 2;
      // Hysteresis: offset so it doesn't flicker around boundary
      const hysteresis = 60; // px
      if (stage === 0 && sectionCenter < viewportCenter - hysteresis) {
        setStage(1);
      } else if (stage === 1 && sectionCenter > viewportCenter + hysteresis) {
        setStage(0);
      }
    };
    handleScroll();
    window.addEventListener('scroll', handleScroll, { passive: true });
    window.addEventListener('resize', handleScroll);
    return () => {
      window.removeEventListener('scroll', handleScroll);
      window.removeEventListener('resize', handleScroll);
    };
  }, [stage]);

  // Optional: reduce motion preference
  const prefersReducedMotion = typeof window !== 'undefined' && window.matchMedia && window.matchMedia('(prefers-reduced-motion: reduce)').matches;

  return (
    <div className="relative" ref={sectionRef}>
      {/* Unified subtle background using primary palette */}
      <div className="absolute inset-0 -z-10 bg-gradient-to-b from-white via-primary-50/60 to-white" />
      <div className="absolute inset-0 -z-10 opacity-[0.35] [background-image:linear-gradient(to_right,rgba(16,122,52,0.06)_1px,transparent_1px),linear-gradient(to_bottom,rgba(16,122,52,0.06)_1px,transparent_1px)] bg-[size:46px_46px]" aria-hidden="true" />
      <div className="absolute inset-0 -z-10 bg-[radial-gradient(circle_at_80%_20%,rgba(34,139,50,0.18),transparent_60%)]" aria-hidden="true" />
      <section className="py-20 px-6 sm:px-8 lg:px-12 xl:px-20">
        <div className="max-w-7xl mx-auto">
          {/* Header */}
          <header className="max-w-3xl mb-16 mx-auto text-center">
            <div className="inline-flex items-center gap-2 px-6 py-1.5 rounded-full bg-primary-100 text-primary-700 text-xs font-semibold tracking-wide mb-6 shadow-sm ring-1 ring-primary-600/10">
              <span className="w-2 h-2 rounded-full bg-primary-500 animate-pulse" />
              {isBn ? '‡¶¨‡¶æ‡¶ú‡¶æ‡¶∞ ‡¶∞‡ßÇ‡¶™‡¶æ‡¶®‡ßç‡¶§‡¶∞‡ßá‡¶∞ ‡¶Æ‡ßÇ‡¶≤ ‡¶∏‡ßç‡¶§‡¶Æ‡ßç‡¶≠' : 'Core Pillars Transforming The Market'}
            </div>
            <h2 className="text-3xl sm:text-4xl font-extrabold tracking-tight bg-gradient-to-r from-primary-700 to-primary-500 bg-clip-text text-transparent leading-tight">
              {isBn ? '‡¶∏‡¶ø‡¶®‡ßç‡¶°‡¶ø‡¶ï‡ßá‡¶ü ‡¶≠‡¶æ‡¶ô‡¶§‡ßá ‡¶°‡ßá‡¶ü‡¶æ, ‡¶è‡¶Ü‡¶á ‡¶ì ‡¶∏‡ßç‡¶¨‡¶ö‡ßç‡¶õ‡¶§‡¶æ‡¶∞ ‡¶∏‡¶Æ‡¶®‡ßç‡¶¨‡¶Ø‡¶º' : 'Data, AI & Transparency Against Cartel Control'}
            </h2>
            <p className="mt-5 text-base sm:text-lg text-slate-600 leading-relaxed">
              {isBn ? '‡¶∏‡ßç‡¶ï‡ßç‡¶∞‡¶≤ ‡¶ï‡¶∞‡ßÅ‡¶®‚Äî‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡ß™‡¶ü‡¶ø ‡¶∏‡ßç‡¶§‡¶Æ‡ßç‡¶≠, ‡¶§‡¶æ‡¶∞‡¶™‡¶∞ ‡¶™‡¶∞‡¶¨‡¶∞‡ßç‡¶§‡ßÄ ‡ß™‡¶ü‡¶ø ‡¶∏‡ßç‡¶¨‡¶Ø‡¶º‡¶Ç‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º‡¶≠‡¶æ‡¶¨‡ßá ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá‡•§' : 'Scroll to transition from the first four pillars to the next four seamlessly.'}
            </p>
          </header>

          {/* Stacked Grids */}
          <div className="relative min-h-[420px] md:min-h-[440px] lg:min-h-[460px]">
            {/* Group A */}
            <div className={`absolute inset-0 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-2 xl:grid-cols-4 gap-5 lg:gap-6 transition-all duration-700 ease-out ${stage === 0 ? 'opacity-100 translate-y-0' : 'opacity-0 -translate-y-6 pointer-events-none'}`}>
              {groupA.map((f, i) => (
                <FeatureCard key={f.key} feature={f} index={i} isBn={isBn} stageActive={stage === 0} />
              ))}
            </div>
            {/* Group B */}
            <div className={`absolute inset-0 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-2 xl:grid-cols-4 gap-5 lg:gap-6 transition-all duration-700 ease-out ${stage === 1 ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-6 pointer-events-none'}`}>
              {groupB.map((f, i) => (
                <FeatureCard key={f.key} feature={f} index={i + 4} isBn={isBn} stageActive={stage === 1} />
              ))}
            </div>
          </div>

          {/* Progress Indicator */}
          <div className="mt-14 flex items-center justify-center gap-3">
            {[0,1].map(s => (
              <span key={s} className={`h-2 rounded-full transition-all duration-500 ${stage === s ? 'w-12 bg-primary-600' : 'w-4 bg-primary-300'}`} aria-label={isBn ? `‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ${s+1}` : `Group ${s+1}`} />
            ))}
          </div>
        </div>
      </section>
    </div>
  );
};

// Extracted card component for reuse
const FeatureCard = ({ feature: f, isBn, stageActive }) => {
  const title = isBn ? f.titleBn : f.titleEn;
  const desc = isBn ? f.descBn : f.descEn;
  return (
    <div className={`group relative h-full overflow-hidden rounded-2xl bg-white/90 backdrop-blur-sm ring-1 ring-primary-900/5 hover:ring-primary-500/30 hover:shadow-xl shadow-sm transition-all duration-500 ease-out ${stageActive ? 'opacity-100' : 'opacity-0'} `}>
      <div className="pointer-events-none absolute inset-0 opacity-0 group-hover:opacity-100 transition duration-500 bg-[radial-gradient(circle_at_70%_30%,rgba(16,122,52,0.16),transparent_60%)]" />
      <div className="p-5 flex flex-col h-full relative">
        <div className="flex items-start justify-between mb-4">
          <div className="relative">
            <div className="p-2.5 rounded-xl bg-gradient-to-br from-primary-50 to-white ring-1 ring-primary-600/10 shadow-inner group-hover:shadow-md transition-transform duration-300 group-hover:scale-110">
              {f.icon}
            </div>
            <span className="absolute -top-1.5 -right-1.5 text-lg select-none drop-shadow" aria-hidden="true">{f.emoji}</span>
          </div>
          <span className="text-[10px] uppercase tracking-wide font-semibold text-primary-700/80 bg-primary-100/70 px-2 py-1 rounded-full">{isBn ? '‡¶∏‡ßç‡¶§‡¶Æ‡ßç‡¶≠' : 'Pillar'}</span>
        </div>
        <h3 className="text-[15px] font-semibold text-slate-800 group-hover:text-primary-700 leading-snug line-clamp-2">{title}</h3>
        <p className="mt-2 text-[12.5px] leading-relaxed text-slate-600 flex-1 line-clamp-5">{desc}</p>
        <div className="mt-4 flex items-center justify-between text-[10.5px] font-medium text-slate-500">
          <span className="inline-flex items-center gap-1 tracking-wide"><span className="w-1.5 h-1.5 rounded-full bg-primary-500 animate-pulse"/> {isBn ? '‡¶Æ‡¶®‡¶ø‡¶ü‡¶∞‡¶ø‡¶Ç' : 'Monitoring'}</span>
          <span className="inline-flex items-center gap-1 text-primary-600 group-hover:gap-2 transition-all">{isBn ? '‡¶Ü‡¶∞‡¶ì ‡¶ú‡¶æ‡¶®‡ßÅ‡¶®' : 'Learn more'}<svg className="w-3.5 h-3.5" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" viewBox="0 0 24 24"><path d="M5 12h14" /><path d="M13 6l6 6-6 6" /></svg></span>
        </div>
      </div>
      <div className="absolute inset-x-0 bottom-0 h-0.5 bg-gradient-to-r from-primary-400 via-primary-500 to-amber-400 scale-x-0 group-hover:scale-x-100 origin-left transition-transform duration-500" />
    </div>
  );
};

export default FeatureCards;
